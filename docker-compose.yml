version: '3.8'

services:
  rentalapi:
    build:
      context: ./RentalApi
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ConnectionStrings__DefaultConnection: ${DB_CONNECTION}
      RabbitMQ__Host: ${RABBITMQ_HOST}
      RabbitMQ__Username: ${RABBITMQ_USER}
      RabbitMQ__Password: ${RABBITMQ_PASS}
    depends_on:
      - db
      - rabbitmq

  tests:
    build:
      context: ./Tests/RentalApi.Tests
      dockerfile: Dockerfile.test
    env_file:
      - .env
    environment:
      ASPNETCORE_ENVIRONMENT: Testing
      ConnectionStrings__DefaultConnection: ${DB_CONNECTION_TEST}
      RabbitMQ__Host: ${RABBITMQ_HOST}
      RabbitMQ__Username: ${RABBITMQ_USER}
      RabbitMQ__Password: ${RABBITMQ_PASS}
    depends_on:
      - db-test
      - rabbitmq
    profiles:
      - test  # SÃ³ roda quando especificado

  # Banco para testes
  db-test:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB_TEST}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - pgdata-test:/var/lib/postgresql/data
    profiles:
      - test

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - .env
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

volumes:
  pgdata:
